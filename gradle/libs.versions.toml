# üì¶ Version Catalog for libs.versions.toml
[versions]
# üîß Build & Gradle Tools
agp = "8.9.0"
androidTools = "31.8.0"
kotlin = "2.0.0"
ksp = "2.0.0-1.0.22"
ktlint = "11.5.0"

# üß± Core AndroidX & Kotlin
coreKtx = "1.13.1"
lifecycleRuntimeKtx = "2.8.6"
desugar_jdk_libs = "2.1.4"
appcompat = "1.7.0"
material = "1.12.0"
coroutines = "1.9.0"

# üñºÔ∏è Jetpack Compose UI
coreSplashscreen = "1.0.1"
activityCompose = "1.9.2"
composeBom = "2025.02.00"
materialIconsExtended = "1.7.7"
uiTextGoogleFonts = "1.7.5"
lottieCompose = "6.6.4"
coilCompose = "3.1.0"
foundationAndroid = "1.7.2"
foundationLayoutAndroid = "1.7.2"

# üì¶ Dependency Injection (Hilt)
hilt = "2.51.1"
navigationComposeHilt = "1.2.0"

# üóÇÔ∏è Data Persistence
datastorePreferences = "1.1.4"
room = "2.6.1"

# üîó Networking & Serialization
retrofit = "2.10.0"
okkhttp = "4.12.0"
moshi = "1.15.1"
kotlinx-serialization = "1.6.3"
googleid = "1.1.1"

# üì≤ Firebase Services
firebaseBom = "33.10.0"
googleService = "4.4.2"
googleFirebaseCrashlytics = "3.0.3"

# üß≠ Navigation
navigationCompose = "2.8.1"
navigationTesting = "2.8.1"

# üîë Auth
credentialsPlayServicesAuth = "1.5.0"

# ‚öôÔ∏è Logging
timber = "5.0.1"

# üß™ Testing
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
mockk = "1.13.17"
mockwebserver = "4.11.0"
turbine = "0.7.0"
truth = "1.1.3"
robolectric = "4.11.1"

# üß∞ Misc
jetbrainsKotlinJvm = "2.0.0"

# üì¶ Project Info
projectApplicationId = "com.gondroid.mtcquiz"
projectVersionName = "1.0.0"
projectMinSdkVersion = "26"
projectTargetSdkVersion = "35"
projectCompileSdkVersion = "35"
projectVersionCode = "1"

[libraries]
# üîß Build & Gradle Tools
desugar-jdk-libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
android-tools-common = { group = "com.android.tools", name = "common", version.ref = "androidTools" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
room-gradlePlugin = { group = "androidx.room", name = "room-gradle-plugin", version.ref = "room" }

# üß± Core AndroidX & Kotlin
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

# üñºÔ∏è Jetpack Compose UI
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }

androidx-compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-ui-text-google-fonts = { group = "androidx.compose.ui", name = "ui-text-google-fonts", version.ref = "uiTextGoogleFonts" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieCompose" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilCompose" }
androidx-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android", version.ref = "foundationAndroid" }

# üì¶ Dependency Injection (Hilt)
dagger-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "navigationComposeHilt" }
dagger-hilt = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
dagger-hilt-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }
dagger-hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }

# üóÇÔ∏è Data Persistence
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }

# üîó Networking & Serialization
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-moshi = { group = "com.squareup.retrofit2", name = "converter-moshi", version.ref = "retrofit" }
moshi = { group = "com.squareup.moshi", name = "moshi", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-codegen = { group = "com.squareup.moshi", name = "moshi-kotlin-codegen", version.ref = "moshi" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okkhttp" }
okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okkhttp" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
googleid = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleid" }

# üì≤ Firebase Services
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-database = { module = "com.google.firebase:firebase-database" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }

# üß≠ Navigation
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
androidx-navigation-testing = { group = "androidx.navigation", name = "navigation-testing", version.ref = "navigationTesting" }

# üîë Auth
androidx-credentials = { module = "androidx.credentials:credentials", version.ref = "credentialsPlayServicesAuth" }
androidx-credentials-play-services-auth = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "credentialsPlayServicesAuth" }

# ‚öôÔ∏è Logging
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }

# üß™ Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
mockk-android = { group = "io.mockk", name = "mockk-android", version.ref = "mockk" }
mockwebserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "mockwebserver" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-test-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

[plugins]
# üì± Aplicaci√≥n Android
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

# ‚öôÔ∏è Kotlin Plugins
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }

# üíâ Dependency Injection
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }

# üîç Lint y Calidad de C√≥digo
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }

# üî• Firebase & Servicios Google
com-google-gms-google-services = { id = "com.google.gms.google-services", version.ref = "googleService" }
com-google-firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "googleFirebaseCrashlytics" }

# üß© Plugins Convention (MTCQuiz)
mtcquiz-android-application = { id = "mtcquiz.android.application", version = "unspecified" }
mtcquiz-android-application-compose = { id = "mtcquiz.android.application.compose", version = "unspecified" }
mtcquiz-android-library = { id = "mtcquiz.android.library", version = "unspecified" }
mtcquiz-android-library-compose = { id = "mtcquiz.android.library.compose", version = "unspecified" }
mtcquiz-android-feature-ui = { id = "mtcquiz.android.feature.ui", version = "unspecified" }
mtcquiz-android-room = { id = "mtcquiz.android.room", version = "unspecified" }
mtcquiz-android-hilt = { id = "mtcquiz.android.hilt", version = "unspecified" }
mtcquiz-android-dynamic-feature = { id = "mtcquiz.android.dynamic.feature", version = "unspecified" }
mtcquiz-jvm-library = { id = "mtcquiz.jvm.library", version = "unspecified" }


[bundles]
compose = [
    "androidx-activity-compose",
    "androidx-lifecycle-runtime-compose",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-compose-material3",
    "androidx-compose-ui",
    "androidx-compose-ui-graphics",
    "androidx-compose-ui-tooling-preview",
]
compose-debug = [
    "androidx-compose-ui-tooling",
    "androidx-compose-ui-test-manifest",
]
hilt-compose = [
    "dagger-hilt-navigation-compose"
]